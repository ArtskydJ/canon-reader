require(`reify`)
const books = require(`books-of-the-bible`)
const fs = require(`fs`)
const keyMaster = require(`key-master`)

const bookNameToId = require(`../../client/lib/book-name-to-id.js`).default
const relative = path => require(`path`).join(__dirname, path)

main()

function main() {
	const bookIds = books.map(bookToIds)

	const shortIdToLongIds = keyMaster(() => [])

	const shortIdToLongId = Object.create(null)

	bookIds.forEach(({ longId, shortIds }) => {
		shortIds.forEach(shortId => {
			shortIdToLongIds.get(shortId).push(longId)
		})
	})

	bookIds.forEach(({ longId, shortIds }) => {
		const sortedShortIds = sortShortToLong(shortIds)

		sortedShortIds.forEach(shortId => {
			const shorterVersionWasUsedAlready = getAllShortIds(shortId).some(
				id => shortIdToLongId[id]
			)

			const isUnique = shortIdToLongIds.get(shortId).length === 1
			if (!shorterVersionWasUsedAlready && isUnique) {
				shortIdToLongId[shortId] = longId
			}
		})
	})

	const longestUniqueKey = Object.keys(shortIdToLongId).reduce(
		(longest, key) => Math.max(longest, key.length),
		0
	)

	const output = {
		longestUniqueKey,
		shortIdToLongId,
	}

	fs.writeFileSync(relative(`../../client/lib/short-book-names.js`),
		`/* auto-generated by generation-scripts/generate-book-shortcut-map */

module.exports = ${ JSON.stringify(output, null, `\t`) }
`)
}

function getFirstElement(array, condition) {
	return array.reduce((found, element) => {
		if (found) {
			return found
		}

		if (condition(element)) {
			return element
		}
	}, null)
}

function sortShortToLong(ids) {
	return ids.slice().sort((a, b) => a.length - b.length)
}

function bookToIds(book) {
	const longId = bookNameToId(book.name)
	const aliasIds = book.aliases.map(alias => bookNameToId(alias))

	const uniqueShortIds = new Set()

	const addAllShortIdsToSet = id => getAllShortIds(id).forEach(
		shortId => uniqueShortIds.add(shortId)
	)

	addAllShortIdsToSet(longId)
	aliasIds.forEach(addAllShortIdsToSet)

	return {
		longId,
		shortIds: Array.from(uniqueShortIds),
	}
}

function getAllShortIds(id) {
	let lastShortId = ``
	return id.split(``).map(char => {
		const thisShortId = lastShortId + char
		lastShortId += char
		return thisShortId
	})
}
